<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15" version="27.0.9">
  <diagram name="Page-1" id="qrGzQwODFf5_4_GcaNLa">
    <mxGraphModel dx="-1397" dy="2441" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="d8pLa13S02zXAfsV5OUl-139" value="Backend" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="3690" y="40" width="1910" height="2300" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-60" value="Domain" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="50" y="50" width="260" height="1790" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-62" value="Entities" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-60">
          <mxGeometry x="30" y="40" width="200" height="620" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-63" value="Step" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-62">
          <mxGeometry x="40" y="180" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-64" value="Stage" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-62">
          <mxGeometry x="40" y="280" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-65" value="Output" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-62">
          <mxGeometry x="40" y="400" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-66" value="Procedure" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-62">
          <mxGeometry x="40" y="510" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-208" value="EntityBase" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-62">
          <mxGeometry x="40" y="80" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-67" value="Interfaces" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-60">
          <mxGeometry x="30" y="690" width="200" height="690" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-231" value="IRepository" style="swimlane;whiteSpace=wrap;html=1;fontStyle=0" vertex="1" parent="d8pLa13S02zXAfsV5OUl-67">
          <mxGeometry x="10" y="40" width="180" height="160" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-250" value="IServices" style="swimlane;whiteSpace=wrap;html=1;fontStyle=0" vertex="1" parent="d8pLa13S02zXAfsV5OUl-67">
          <mxGeometry x="10" y="240" width="180" height="190" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-274" value="Events" style="swimlane;whiteSpace=wrap;html=1;fontStyle=0" vertex="1" parent="d8pLa13S02zXAfsV5OUl-67">
          <mxGeometry x="10" y="470" width="180" height="190" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-275" value="Exceptions" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-60">
          <mxGeometry x="30" y="1400" width="200" height="350" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-72" value="Infraestructure" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="370" y="50" width="250" height="1790" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-122" value="Services" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="690" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-127" value="Security" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="1440" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-133" value="Data" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="40" width="200" height="290" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-134" value="ProjectDB" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-133">
          <mxGeometry x="40" y="40" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-276" value="Migrations" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-133">
          <mxGeometry x="40" y="140" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-73" value="Repositories" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="350" width="200" height="310" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-277" value="Messaging" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="910" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-278" value="Caching" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-72">
          <mxGeometry x="25" y="1180" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-84" value="Application" style="swimlane;whiteSpace=wrap;html=1;startSize=23;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="669" y="50" width="250" height="2180" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-85" value="Services" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="25" y="40" width="200" height="410" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-107" value="Interfaces" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="25" y="480" width="200" height="410" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-281" value="Mappings" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="25" y="1180" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-282" value="DTO" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="25" y="920" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-283" value="Features" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="30" y="1430" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-284" value="Behaviours" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="30" y="1690" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-285" value="Validations" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-84">
          <mxGeometry x="30" y="1940" width="200" height="220" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-90" value="API" style="swimlane;whiteSpace=wrap;html=1;startSize=23;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="970" y="50" width="250" height="1680" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-91" value="Controllers" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-90">
          <mxGeometry x="25" y="40" width="200" height="410" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-96" value="DTOs" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-90">
          <mxGeometry x="25" y="470" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-97" value="Middleware" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-90">
          <mxGeometry x="25" y="700" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-106" value="Extensions" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-90">
          <mxGeometry x="25" y="929" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-287" value="HostedServices" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-90">
          <mxGeometry x="25" y="1170" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-288" value="Tesst" style="swimlane;whiteSpace=wrap;html=1;startSize=23;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="1280" y="50" width="250" height="1680" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-289" value="Unit" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-288">
          <mxGeometry x="25" y="40" width="200" height="410" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-290" value="Integration" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-288">
          <mxGeometry x="25" y="470" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-291" value="Functional" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-288">
          <mxGeometry x="25" y="700" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-294" value="SharedKernel" style="swimlane;whiteSpace=wrap;html=1;startSize=23;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-139">
          <mxGeometry x="1580" y="50" width="250" height="1680" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-295" value="Common" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-294">
          <mxGeometry x="25" y="40" width="200" height="410" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-296" value="Interfaces" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="d8pLa13S02zXAfsV5OUl-294">
          <mxGeometry x="25" y="470" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-218" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 1. Configuración Básica&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px; font-weight: normal;&quot;&gt;* Nombre del proyecto:&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Ejemplo: InventoryManagementSystem&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Tipo de API:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- REST&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- GraphQL&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- gRPC&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Microservicios&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Híbrido (REST + GraphQL)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Arquitectura:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Clean Architecture (recomendado)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Capas tradicionales (N-Layer)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Hexagonal (Ports &amp;amp; Adapters)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Vertical Slice&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 2. Dominio (Domain Layer)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Entidades principales:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Lista nombres (ej: User, Product, Order, Procedure, Stage).&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Patrones avanzados en Domain:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* EntityBase (clase abstracta con Id, CreatedAt)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Value Objects (ej: EmailAddress, Money)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Aggregate Roots (ej: Procedure como raíz)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Domain Events (ej: ProcedureCreatedEvent)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Interfaces de dominio:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- IRepository&amp;lt;T&amp;gt; (genérico)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Repositorios personalizados (ej: IProcedureRepository)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Domain Services (ej: IProcedureValidator)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 3. Infraestructura (Infrastructure Layer)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Base de datos:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- SQL Server + EF Core&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- PostgreSQL + EF Core&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- MongoDB&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Dapper (para SQL puro)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Redis (caching)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Patrones de persistencia:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Repository + Unit of Work&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- CQRS con MediatR&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Specification Pattern&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Servicios externos:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Email (SendGrid, SMTP)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Cloud Storage (AWS S3, Azure Blob)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Mensajería (RabbitMQ, Kafka)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- HTTP Clients (Refit)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="2520" y="50" width="590" height="2170" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-256" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Domain&lt;/h1&gt;&lt;p&gt;* Logica de negocio pura (reglas de validación, cálculos)&lt;/p&gt;&lt;p&gt;* Interfaces/Repositorios abstractos (IUserRepository)&lt;/p&gt;&lt;div&gt;* Entidades Base: Step, Stage, Procedure, Output&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* Value Objects: StepProgress, StageDuration&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* Enums: StepType, OutputStatus&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* Interfaces de Repositorio: IRepository&amp;lt;T&amp;gt;, IStepRepository&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* Interfaces de Setvicio: IWorkFlowService&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="3530" y="-300" width="319.65" height="290" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-257" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="d8pLa13S02zXAfsV5OUl-60" target="d8pLa13S02zXAfsV5OUl-256">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-259" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Infrastructure&lt;/h1&gt;&lt;p&gt;* Implementation concrete (Repositories)&lt;/p&gt;&lt;p&gt;* Extern Services (email, Storage, SDKs AWS/Azure)&lt;/p&gt;&lt;p&gt;* DB Conections (EF Corem Dapper)&lt;/p&gt;&lt;div&gt;* Configuration DB: Migrations EF Core&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* Unit of Work: IUnitOfWork (transactional)&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="3940" y="-290" width="300" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-258" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="d8pLa13S02zXAfsV5OUl-72" target="d8pLa13S02zXAfsV5OUl-259">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="4100" y="-150" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-261" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Application&lt;/h1&gt;&lt;p&gt;* Use cases(services/commands/queries)&lt;/p&gt;&lt;p&gt;* Orquestation between Domain and Infrastructure&lt;/p&gt;&lt;p&gt;* DTOs and Maps (AutoMapper) -&amp;gt; WorkFlowMappingProfile&lt;/p&gt;&lt;div&gt;* Validations: CreateStepValidator (FluentValidation)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;* CQRS: CreateStepCommand, GetStepsQuery&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="4300" y="-300" width="300" height="200" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-262" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="d8pLa13S02zXAfsV5OUl-84" target="d8pLa13S02zXAfsV5OUl-261">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-264" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;API&lt;/h1&gt;&lt;p&gt;* Controllers (REST, GraphQL)&lt;/p&gt;&lt;p&gt;*DTOs Especificos: CreateStepRequest, StepResponse.&lt;br&gt;&lt;/p&gt;&lt;p&gt;* Authentication (JWT, OAuth).&lt;/p&gt;&lt;p&gt;* Request Validation (FluentValidation)&lt;/p&gt;&lt;p&gt;* Middleware&#39;s: RequestLoggingMiddleware.&lt;br&gt;&lt;/p&gt;&lt;div&gt;* Filters Customs: CustomExceptionFilter&lt;/div&gt;&lt;div&gt;&amp;nbsp;GlobalErrorHandle&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HealthChecks: Configure in Program.cs&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="4640" y="-280" width="300" height="270" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-265" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="d8pLa13S02zXAfsV5OUl-90" target="d8pLa13S02zXAfsV5OUl-264">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-267" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Security&lt;/h1&gt;&lt;div&gt;JWT Authentication: Configure Scheme in program.cs&lt;/div&gt;&lt;div&gt;Autorization by roles/policies: [Authorize(Policy = &quot;Admin&quot;)]&lt;/div&gt;&lt;div&gt;CORS: Configure polities in Program&lt;/div&gt;&lt;div&gt;Rate Limiting: Limits by endpoint/IP&lt;/div&gt;&lt;div&gt;Swagger/OpenAPI: Documentation + configuration JWT in UI&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="4002.5" y="2020" width="365" height="165" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-272" value="Teseting:&lt;div&gt;UnitTests: StepServiceTests (Mock de Repository)&lt;/div&gt;&lt;div&gt;Integration Tests: StepControllerIntegrationTests (TestServer)&lt;/div&gt;&lt;div&gt;Test Data Factories: StepFactory for data tests&lt;/div&gt;" style="shape=partialRectangle;html=1;whiteSpace=wrap;connectable=0;strokeColor=inherit;overflow=hidden;fillColor=none;top=0;left=0;bottom=0;right=0;pointerEvents=1;fontSize=12;align=left;spacingLeft=5;" vertex="1" parent="1">
          <mxGeometry x="4960" y="-280" width="370" height="176" as="geometry">
            <mxRectangle width="370" height="176" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-280" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="d8pLa13S02zXAfsV5OUl-72" target="d8pLa13S02zXAfsV5OUl-267">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-309" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;🔷 Infrastructure Layer&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Buenas Prácticas&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Repositorios:&lt;/p&gt;&lt;p&gt;* Implementar IUnitOfWork para transacciones:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class UnitOfWork(AppDbContext context) : IUnitOfWork {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public async Task CommitAsync() =&amp;gt; await context.SaveChangesAsync();&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;* Usar IQueryable solo dentro de repositorios (no exponerlo a Application).&lt;/p&gt;&lt;p&gt;EF Core:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;* Configurar relaciones en OnModelCreating (evitar atributos [ForeignKey]).&lt;/p&gt;&lt;p&gt;* Usar migraciones con semillas de datos:&lt;/p&gt;&lt;p&gt;bash&lt;/p&gt;&lt;p&gt;dotnet ef migrations add InitialCreate&lt;/p&gt;&lt;p&gt;* Caching:&lt;/p&gt;&lt;p&gt;Implementar el patrón Cache-Aside:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class CachedProductRepository(IProductRepository decorated, IDistributedCache cache)&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; : IProductRepository {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public async Task&amp;lt;Product&amp;gt; GetByIdAsync(Guid id) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var cached = await cache.GetStringAsync($&quot;product-{id}&quot;);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (cached != null) return JsonSerializer.Deserialize&amp;lt;Product&amp;gt;(cached);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var product = await decorated.GetByIdAsync(id);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await cache.SetStringAsync($&quot;product-{id}&quot;, JsonSerializer.Serialize(product));&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return product;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;* External Services:&lt;/p&gt;&lt;p&gt;Usar Polly para retries y circuit-breaker:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;services.AddHttpClient&amp;lt;IPaymentService, PaymentService&amp;gt;()&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; .AddTransientHttpErrorPolicy(policy =&amp;gt; policy.WaitAndRetryAsync(3, _ =&amp;gt; TimeSpan.FromSeconds(2)));&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="6230" y="30" width="590" height="1060" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-310" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;🔷 Application Layer&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Buenas Prácticas&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;CQRS:&lt;/p&gt;&lt;p&gt;Separar comandos (mutaciones) y queries (lecturas):&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public record CreateProcedureCommand(string Name) : IRequest&amp;lt;Guid&amp;gt;;&lt;/p&gt;&lt;p&gt;public record GetProcedureQuery(Guid Id) : IRequest&amp;lt;ProcedureDto&amp;gt;;&lt;/p&gt;&lt;p&gt;Validación:&lt;/p&gt;&lt;p&gt;Usar FluentValidation con reglas reutilizables:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class CreateProcedureValidator : AbstractValidator&amp;lt;CreateProcedureCommand&amp;gt; {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public CreateProcedureValidator() {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RuleFor(x =&amp;gt; x.Name).NotEmpty().MaximumLength(100);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;DTOs:&lt;/p&gt;&lt;p&gt;Usar records para inmutabilidad:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public record ProcedureDto(Guid Id, string Name, List&amp;lt;StageDto&amp;gt; Stages);&lt;/p&gt;&lt;p&gt;AutoMapper:&lt;/p&gt;&lt;p&gt;Configurar perfiles en Application/Mappings:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class ProcedureProfile : Profile {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public ProcedureProfile() {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; CreateMap&amp;lt;Procedure, ProcedureDto&amp;gt;();&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="6830" y="30" width="490" height="830" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-311" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;🔷 Domain Layer&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Buenas Prácticas&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Entidades:&lt;/p&gt;&lt;p&gt;Usar constructores privados y métodos Factory para creación controlada.&lt;/p&gt;&lt;p&gt;Validar invariantes (reglas de negocio) en los setters.&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class Procedure : EntityBase {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; private Procedure() {} // Constructor privado para EF Core&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public static Procedure Create(string name) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (string.IsNullOrEmpty(name)) throw new DomainException(&quot;Name required&quot;);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new Procedure { Name = name };&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;Aggregates:&lt;/p&gt;&lt;p&gt;Agrupar entidades hijas bajo una raíz (ej: Procedure → Stage → Step).&lt;/p&gt;&lt;p&gt;Acceder a entidades hijas solo a través del agregado raíz.&lt;/p&gt;&lt;p&gt;Domain Events:&lt;/p&gt;&lt;p&gt;Usar eventos para desacoplar lógica (ej: ProcedureCreatedEvent).&lt;/p&gt;&lt;p&gt;Aplicar el patrón Observer para handlers.&lt;/p&gt;&lt;p&gt;Interfaces:&lt;/p&gt;&lt;p&gt;Definir repositorios y servicios de dominio en Domain/Interfaces.&lt;/p&gt;&lt;p&gt;Nunca referenciar implementaciones concretas.&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="5720" y="50" width="470" height="700" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-312" value="🔷 API Layer&#xa;&#xa;Buenas Prácticas&#xa;&#xa;Controllers:&#xa;Mantenerlos delgados (solo HTTP + DTOs).&#xa;Usar ActionResult&lt;T&gt; para respuestas tipadas:&#xa;csharp&#xa;[HttpGet(&quot;{id}&quot;)]&#xa;public async Task&lt;ActionResult&lt;ProcedureDto&gt;&gt; GetProcedure(Guid id) {&#xa;    var procedure = await _mediator.Send(new GetProcedureQuery(id));&#xa;    return Ok(procedure);&#xa;}&#xa;Middleware:&#xa;Manejo centralizado de errores:&#xa;csharp&#xa;app.UseExceptionHandler(&quot;/error&quot;);&#xa;app.UseMiddleware&lt;ErrorHandlerMiddleware&gt;();&#xa;Documentación:&#xa;Anotar endpoints con Swagger:&#xa;csharp&#xa;[SwaggerOperation(Summary = &quot;Get a procedure by ID&quot;)]&#xa;[ProducesResponseType(typeof(ProcedureDto), 200)]&#xa;Seguridad:&#xa;Validar JWT con políticas:&#xa;csharp&#xa;services.AddAuthorization(options =&gt; {&#xa;    options.AddPolicy(&quot;AdminOnly&quot;, policy =&gt; policy.RequireRole(&quot;Admin&quot;));&#xa;});" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="5690" y="1040" width="500" height="560" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-313" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;🔷 Testing&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Buenas Prácticas&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Unit Tests:&lt;/p&gt;&lt;p&gt;Mockear dependencias con Moq:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;var mockRepo = new Mock&amp;lt;IProcedureRepository&amp;gt;();&lt;/p&gt;&lt;p&gt;mockRepo.Setup(r =&amp;gt; r.GetByIdAsync(It.IsAny&amp;lt;Guid&amp;gt;()))&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; .ReturnsAsync(new Procedure(&quot;Test&quot;));&lt;/p&gt;&lt;p&gt;Integration Tests:&lt;/p&gt;&lt;p&gt;Usar TestContainers para bases de datos reales:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;public class DatabaseFixture : IAsyncLifetime {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; private readonly Testcontainer _container = new TestcontainersBuilder&amp;lt;PostgreSqlTestcontainer&amp;gt;()&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .WithDatabase(new PostgreSqlTestcontainerConfiguration { Database = &quot;test&quot;, Username = &quot;user&quot;, Password = &quot;pass&quot; })&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .Build();&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public string ConnectionString =&amp;gt; _container.ConnectionString;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public Task InitializeAsync() =&amp;gt; _container.StartAsync();&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; public Task DisposeAsync() =&amp;gt; _container.DisposeAsync();&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;Contract Tests:&lt;/p&gt;&lt;p&gt;Validar APIs con Pact.NET (para microservicios).&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="6230" y="1040" width="690" height="710" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-314" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;🔷 DevOps&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Buenas Prácticas&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Docker:&lt;/p&gt;&lt;p&gt;Multi-stage builds para imágenes livianas:&lt;/p&gt;&lt;p&gt;dockerfile&lt;/p&gt;&lt;p&gt;FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build&lt;/p&gt;&lt;p&gt;WORKDIR /src&lt;/p&gt;&lt;p&gt;COPY . .&lt;/p&gt;&lt;p&gt;RUN dotnet publish -c Release -o /app&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;FROM mcr.microsoft.com/dotnet/aspnet:8.0&lt;/p&gt;&lt;p&gt;WORKDIR /app&lt;/p&gt;&lt;p&gt;COPY --from=build /app .&lt;/p&gt;&lt;p&gt;ENTRYPOINT [&quot;dotnet&quot;, &quot;API.dll&quot;]&lt;/p&gt;&lt;p&gt;CI/CD:&lt;/p&gt;&lt;p&gt;Ejecutar tests en GitHub Actions:&lt;/p&gt;&lt;p&gt;yaml&lt;/p&gt;&lt;p&gt;jobs:&lt;/p&gt;&lt;p&gt;&amp;nbsp; test:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; steps:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; - run: dotnet test --configuration Release --no-restore&lt;/p&gt;&lt;p&gt;Health Checks:&lt;/p&gt;&lt;p&gt;Configurar endpoints para Kubernetes:&lt;/p&gt;&lt;p&gt;csharp&lt;/p&gt;&lt;p&gt;services.AddHealthChecks()&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; .AddDbContextCheck&amp;lt;AppDbContext&amp;gt;();&lt;/p&gt;&lt;p&gt;app.MapHealthChecks(&quot;/health&quot;);&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="6928" y="1040" width="512" height="820" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-315" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;📌 Checklist de Implementación&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;br&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Capa&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; Buenas Prácticas Clave&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Domain&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; Entidades ricas, invariantes validados, eventos&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Infra&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; UoW, caching estratégico, resiliencia con Polly&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Application&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; CQRS, validaciones, DTOs inmutables&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;API&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Controllers delgados, middleware de errores, Swagger&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Testing&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; Mockeo unitario, TestContainers para integración&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;DevOps&lt;span style=&quot;white-space:pre&quot; class=&quot;Apple-tab-span&quot;&gt;&#x9;&lt;/span&gt; &amp;nbsp; &amp;nbsp; Docker multi-stage, health checks, CI/CD con tests&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="6580" y="1960" width="840" height="460" as="geometry" />
        </mxCell>
        <mxCell id="d8pLa13S02zXAfsV5OUl-316" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 4. Aplicación (Application Layer)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Patrones de aplicación:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- CQRS (Commands/Queries)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Event Sourcing&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Pipeline Behaviors (MediatR)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Validación:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- FluentValidation&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- DataAnnotations&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- DTOs y Mapeo:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- AutoMapper&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Manual (records/classes)&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 5. Capa API&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Autenticación/Autorización:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- JWT&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- IdentityServer&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- OAuth2 (Google, Azure AD)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Middleware:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Error Handling (custom middleware)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Logging (Serilog)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Rate Limiting&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Request/Response Logging&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Documentación:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Swagger/OpenAPI&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- GraphQL Playground (si aplica)&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;🔹 6. Herramientas Adicionales&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Testing:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- xUnit&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Moq (mocks)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Integration Tests (TestContainers)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- DevOps:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Dockerfile + Docker Compose&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- CI/CD (GitHub Actions, Azure DevOps)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Health Checks (Kubernetes-ready)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;* Logging y Monitoreo:&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Serilog (estructurado)&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Elasticsearch + Kibana&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Prometheus + Grafana&lt;/font&gt;&lt;/h1&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="3130" y="40" width="490" height="1880" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
